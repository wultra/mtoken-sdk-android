/*
 * Copyright 2020 Wultra s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'


ext {
    bintrayRepo = "WultraMobileTokenSDK"
    bintrayName = project.GROUP_ID
    libraryName = project.ARTIFACT_ID

    publishedGroupId = project.GROUP_ID
    artifact = project.ARTIFACT_ID
    libraryVersion = project.VERSION_NAME

    libraryDescription = "Android Wultra Mobile Token SDK library"
    siteUrl = "https://github.com/wultra/mtoken-sdk-android"
    gitUrl = "https://github.com/wultra/mtoken-sdk-android.git"
    developerId = "wultra"
    developerName = "Wultra s.r.o."
    developerEmail = "support@wultra.com"
    licenseName = "Apache License Software License, Version 2.0"
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task androidSourcesJar(type: Jar) {
	classifier = 'sources'
	from android.sourceSets.main.java.srcDirs
}

artifacts {
	archives androidSourcesJar
}

// Bintray
Properties properties = new Properties()
def propFile = project.rootProject.file('local.properties')
if (propFile.canRead()) {
    properties.load(propFile.newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apiKey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = properties.getProperty("bintray.userOrg")
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        publicDownloadNumbers = false
        override = false
        version {
            desc = libraryDescription
            gpg {
                sign = false //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}